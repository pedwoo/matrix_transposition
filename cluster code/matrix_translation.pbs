#!/bin/bash

# Job name
#PBS -N matrix_transposition

# Output files
#PBS -o ./MainScriptOutput.o
#PBS -e ./MainScriptErrors.e

# Queue name
#PBS -q short_cpuQ

# Set the maximum wall time
#PBS -l walltime=01:00:00

# Number of nodes, cpus, mpi processors and amount of memory
#PBS -l select=1:ncpus=32:mem=1gb

# Modules for C
module load gcc91
gcc() {
    gcc-9.1.0 "$@"
}
gcc --version

# SET WORKING DIRECTORY
cd /home/daniele.pedrolli/ex/cluster_code

mkdir -p exec

############################
## COMPILATION AND RUNNIG ##
############################

# Compile and run the Sequential Approach
echo "Compiling and running the Sequential Approach"
echo "==============================================="
gcc 01_transposition_sequential.c -o ./exec/01_transposition_sequential
./exec/01_transposition_sequential
echo ""

# Compile and run the Implicit Parallelism Approach
echo "Compiling and running the Implicit Parallelism Approach"
echo "========================================================"
gcc -O2 -march=native 02_transposition_par_implicit.c -o ./exec/02_transposition_par_implicit
./exec/02_transposition_par_implicit
echo ""

# Compile and run the OpenMP Approach
echo "Compiling and running the OpenMP Approach"
echo "=========================================="
gcc -O3 -fopenmp 03_transposition_par_openmp.c -o ./exec/03_transposition_par_openmp

echo "Running OpenMP Approach with 1 thread"
./exec/03_transposition_par_openmp 1 1
echo ""
echo "Running OpenMP Approach with 2 threads"
./exec/03_transposition_par_openmp 1 0
echo ""
echo "Running OpenMP Approach with 4 threads"
./exec/03_transposition_par_openmp 1 0
echo ""
echo "Running OpenMP Approach with 8 threads"
./exec/03_transposition_par_openmp 1 0
echo ""
echo "Running OpenMP Approach with 16 threads"
./exec/03_transposition_par_openmp 1 0
echo ""

